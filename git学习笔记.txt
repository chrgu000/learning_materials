Git 学习笔记   http://blog.jobbole.com/78960/
git指令
cd d:----代表打开D盘
cd www----代表在当前目录打开www文件夹
mkdir testgit----代表在当前目录创建一个文件夹，名字为testgit
pwd----代表显示当前路径
git init----在当前目录变成git可以管理的仓库（创建git仓库）
git add demo.txt----把demo.txt文件添加到版本库中。
git commit -m "demo.txt提交"----表示告诉版本库，我已经把demo.txt 引号的内容是发送的提示信息。
git status----查看git状态（是否还有文件未提交，文件是否修改了，但是没有重新提交一次）。
git diff demo.txt----查看文件改变后的内容。
git log----查看历史（每次提交的版本号和每次提交的注释会显示）。
git reset --hard HEAD^----返回上一个版本，2个^^表示上上个版本。
git reflog----精简显示每一次改变的版本号和它的提示信息。
cat demo.txt----查看demo.txt的文本内容。
/******************************************************************************/
一：理解git与标示。
1、理解什么是git:
     Git是目前世界上最先进的分布式版本控制系统。
2、填写用户名和邮箱:
     因为Git是分布式版本控制系统，所以需要填写用户名和邮箱作为一个标识。
     命令行：
       git config --global user.name "wangqilin"
       git config --global user.email "1239958163@qq.com"
  注意:git config --global 参数，有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然你也可以对某个仓库指定的不同的用户名和邮箱。
/******************************************************************************/
二：创建版本库和添加文件。
1、创建版本库:
       git init----在当前目录变成git可以管理的仓库（创建git版本库）
2、把文件添加到版本库中:
       git add demo.txt----把demo.txt文件添加到版本库中。
       如果需要添加目录下所有文件
        git add -A
3、告诉git,已经把文件提交到仓库了:
       git commit -m "demo.txt提交"
4、连接远程仓库
       git remote add origin github仓库地址
5、上传代码
        git push命令会有两个参数，远端仓库的名字，以及分支的名字：
        git push origin master
/******************************************************************************/
三：版本回退。
1、查看历史记录
       git log
   （1）如果嫌内容繁杂，发送 git log --pretty=oneline 可以精简内容显示
2、版本回退操作
       git reset --hard HEAD^----返回上一个版本
       git reset --hard HEAD^^----返回上上个版本
       以此类推...
    （2）版本号回退
       git reset --hard 版本号----回到指定版本号的版本。
3、恢复指定版本号的版本
       git reflog
4、输出文本
       cat demo.txt
/******************************************************************************/
四：连接远程仓库
        git remote add origin "github仓库地址"
	一个项目可以同时拥有好几个远端仓库为了能够区分，通常会起不同的名字。通常主远端仓库被称为origin。
/******************************************************************************/
五:创建分支，切换分支，删除分支,合并分支
	git branch 分支名---创建分支
	git checkout 分支名---切换分支
	git merge 分支名----合并分支(注意：合并是要注意是谁合并谁，如果是A合并B，那么需要切换到A分支)
	git branch -d 分支名---删除分支	
/******************************************************************************/
六:克隆仓库
	放在Github上的开源项目，人们可以看到你的代码。可以使用 git clone进行下载到本地。
	git clone github仓库URL
/******************************************************************************/
七:从服务器上拉取代码
	如果你更新了代码到仓库上，其他人可以通过git pull命令拉取你的变动：
	git pull origin master
